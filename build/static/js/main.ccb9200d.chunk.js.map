{"version":3,"sources":["page/Main.js","page/Sign.js","page/Menupage.js","App.js","reportWebVitals.js","index.js"],"names":["Main","history","useState","id","pwd","login","setLogin","value","job","setJob","check","setCheck","useEffect","Axios","get","then","response","data","className","htmlFor","type","onChange","e","target","placeholder","required","autoFocus","event","console","log","name","onClick","preventDefault","find","alert","post","title","content","push","Sign","props","location","pathname","MenuPage","App","path","component","SignPage","MainPage","Menupage","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccb9200d.chunk.js","sourcesContent":["// eslint-disalbe\n\nimport React,{useState} from'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Axios from'axios';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\n\nfunction Main({history}) {\n  const [login,setLogin] = useState({id: \"\",pwd: \"\"});\n  const [job,setJob] = useState({value : \"스태프\"});\n\n  const [check,setCheck] = useState({\n    id : '',\n    pwd : '',\n    job : ''\n  });\n\n  useEffect(()=>{\n    Axios.get('http://localhost:8000/api/get').then((response)=>{\n        setCheck(response.data);\n    })\n  },[])\n  //데이터 불러오기\n  \n  const loginHandler = e =>{\n    e.preventDefault();\n    console.log(check);\n    const newcheck = [...check];\n    const id = newcheck.find(id => id.id == login.id);\n    if(id!=null){\n        alert('중복된 아이디 입니다...');\n    }\n    else{\n      Axios.post('http://localhost:8000/api/insert', {\n        title: login.id,\n        content: login.pwd,\n        job : job.value\n      }).then(()=>{\n        alert('회원가입 성공!!');\n        history.push('/sign');\n      })\n\n    }\n\n\n  }\n  //회원가입 성공\n  \n\n  const logincheck = () => {\n    const newcheck = [...check];\n    const id = newcheck.find(id => id.id = login.id);\n    if(id.id == login.id){\n        alert('중복된 아이디 입니다.');\n    }\n    else{\n        alert('로그인 실패..');\n    }\n  }\n\n\n  const handleChange = (event) =>{\n    setJob({value: event.target.value});\n    console.log(job);\n  }\n\n  return(\n    <div className=\"container\">\n    <form  className=\"form-signin\">\n      <h2 className=\"form-signin-heading\">회원가입 창</h2>\n      <label htmlFor=\"inputEmail\" className=\"sr-only\">고 번</label>\n      <input type=\"text\" onChange ={e => setLogin({...login, id : e.target.value})} value ={login.id} id=\"inputEmail\" className=\"form-control\" placeholder=\"ID\" required autoFocus/>\n      <label htmlFor=\"inputPassword\" className=\"sr-only\">비밀번호</label>\n      <input type=\"password\" onChange ={e => setLogin({...login, pwd : e.target.value})} value ={login.pwd} id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" required/>\n      \n    <div className=\"form-group\">\n        <label htmlFor=\"exampleSelect1\" className=\"form-label mt-4\">직업 선택</label>\n        <select value={job.value} onChange={handleChange} name =\"lifeArr\" className=\"form-select\" id=\"exampleSelect1\">\n          <option value=\"스태프\">스태프</option>\n          <option value=\"경찰\">경찰</option>\n          <option value=\"EMS\">EMS</option>\n      </select>\n    </div>\n\n      &nbsp;<br/>\n      <button onClick={loginHandler} className=\"btn btn-primary\" >   회원가입   </button>\n\n\n      </form>\n\n  </div>\n  );\n  \n}\n\nexport default Main;","// eslint-disalbe\n\nimport React,{useState} from'react';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Axios from'axios';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport MainPage from './Main';\n\nfunction Sign({props, location, history }) { \n  //로그인을 위한 것들\n//   const mongoose = require('mongoose')\n//   mongoose.connect('mongodb+srv://slbin:awd15963@cluster0.mywlh.mongodb.net/myFirstDatabase?retryWrites=true&w=majority',{\n//   useNewUrlParser : true,useUnifiedTopology : true, useCreateIndex:true , useFindAndModify : false\n// }).then(() => console.log(\"연결 성공\"))\n//   .catch(err => console.log(\"연결실패\"));\n  const [login,setLogin] = useState({id: \"\",pwd: \"\"});\n  const [check,setCheck] = useState([]); //전체 데이터베이스 불러온것\n\n\n\n\n  useEffect(()=>{\n    Axios.get('http://localhost:8000/api/get').then((response)=>{\n        setCheck(response.data);\n    })\n  },[])\n\n  const logincheck = () => {\n    const newcheck = [...check];\n    const id = newcheck.find(id => id.id = login.id);\n    if(id.id == login.id && id.pwd == login.pwd){\n        alert('로그인 성공');\n        history.push({\n            pathname: \"/Menupage\",\n            id : {id :  id} \n          })\n    }\n    else{\n        alert('로그인 실패..');\n    }\n  }\n\n  return(\n    <div className=\"container\">\n    <form  className=\"form-signin\">\n      <h2 className=\"form-signin-heading\">로그인 창</h2>\n      <label htmlFor=\"inputEmail\" className=\"sr-only\">고 번</label>\n      <input type=\"text\" onChange ={e => setLogin({...login, id : e.target.value})} value ={login.id} id=\"inputEmail\" className=\"form-control\" placeholder=\"ID\" required autoFocus/>\n      <label htmlFor=\"inputPassword\" className=\"sr-only\">비밀번호</label>\n      <input type=\"password\" onChange ={e => setLogin({...login, pwd : e.target.value})} value ={login.pwd} id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" required/>\n      <br></br>\n      <button onClick={logincheck} className=\"btn btn-lg btn-primary btn-block\" type=\"submit\"> 로그인 </button>\n      &nbsp;\n      <button onClick={() => history.push('/main')} className=\"btn btn-lg btn-primary btn-block\" > 회원가입 </button>\n      &nbsp;\n      </form>\n\n  </div>\n  );\n  \n}\n\nexport default Sign;","// eslint-disalbe\n\nimport React,{useState} from'react';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Axios from'axios';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport MainPage from './Main';\nimport {useLocation} from \"react-router\";\n\nfunction MenuPage({location,history }) { \n\n\n\n    const id = location;\n    console.log(id.id.id.id);\n  const [login,setLogin] = useState({id: \"\",pwd: \"\"});\n  const [check,setCheck] = useState([]); //전체 데이터베이스 불러온것\n\n\n\n\n  useEffect(()=>{\n    Axios.get('http://localhost:8000/api/get').then((response)=>{\n        setCheck(response.data);\n    })\n  },[])\n\n  const logincheck = () => {\n    const newcheck = [...check];\n    const id = newcheck.find(id => id.id = login.id);\n    console.log(id);\n    if(id.id == login.id && id.pwd == login.pwd){\n        alert('로그인 성공');\n        this.props.history.push('/mainpage}')\n    }\n    else{\n        alert('로그인 실패..');\n    }\n    // setCheckid();\n    // if(checkid.id == login.id && checkid.pwd == login.pwd)\n    // {\n    //     console.log('로그인 성공');\n    // }\n\n  }\n\n  return(\n <div className=\"d-grid gap-2\">\n     <h1>{id.id.id.id} 님 환영합니다.</h1>\n     <h2>아이디 : {id.id.id.id}</h2>\n     <h2>직업 : {id.id.id.job}</h2>\n  <button className=\"btn btn-lg btn-primary\" type=\"button\" value=\"스태프\">스태프</button>\n  <button className=\"btn btn-lg btn-primary\" type=\"button\" value=\"경찰\">경찰</button>\n  <button className=\"btn btn-lg btn-primary\" type=\"button\" value=\"EMS\">EMS</button>\n    </div>\n  );\n  \n}\n\nexport default MenuPage;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SignPage from './page/Sign'; \nimport MainPage from './page/Main';\nimport Menupage from './page/Menupage';\nimport { Link } from 'react-router-dom';\n\n\nfunction App({props, location, history }) { \n\n  return ( \n    <> \n      <Router> \n        <Switch> \n        <> \n          <Route path='/sign' component={SignPage} /> \n          <Route path='/main' component={MainPage} /> \n          <Route path='/menupage' component={Menupage} /> \n          <Link to='/sign'>sign</Link>\n          </> \n        </Switch> \n      </Router> \n    </> \n          ); }\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PRODUCTS","category","price","stocked","name","App","className","FilterableProductTable","useState","products","setproducts","Searchbar","id","type","placeholder","onClick","filter","a","Productsbar","rows","lastCategory","forEach","product","push","border","Pushitem","colSpan","Pushitems","style","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAIMA,EAAW,CACf,CAAEC,SAAU,iBAAkBC,MAAO,SAAUC,SAAS,EAAMC,KAAM,YACpE,CAAEH,SAAU,iBAAkBC,MAAO,QAASC,SAAS,EAAMC,KAAM,YACnE,CAAEH,SAAU,iBAAkBC,MAAO,SAAUC,SAAS,EAAOC,KAAM,cACrE,CAAEH,SAAU,cAAeC,MAAO,SAAUC,SAAS,EAAMC,KAAM,cACjE,CAAEH,SAAU,cAAeC,MAAO,UAAWC,SAAS,EAAOC,KAAM,YACnE,CAAEH,SAAU,cAAeC,MAAO,UAAWC,SAAS,EAAMC,KAAM,YAGrD,SAASC,IACtB,OACE,qBAAKC,UAAU,YAAf,SACE,cAACC,EAAD,MAKN,SAASA,IACP,MAA+BC,mBAASR,GAAxC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,OACE,gCACE,cAAC,EAAD,CAAWD,SAAUA,EAAUC,YAAeA,IAC9C,cAAC,EAAD,CAAaD,SAAUA,OAK7B,IAAME,EAAY,SAAC,GAA+B,IAA7BF,EAA4B,EAA5BA,SAAWC,EAAiB,EAAjBA,YAG9B,OACE,uBAAME,GAAG,OAAT,UACA,uBAAOC,KAAK,OAAOC,YAAY,cAC/B,kCAAI,uBAAOD,KAAK,WAAWE,QALR,WAAOL,EAAYD,EAASO,QAAO,SAAAC,GAAC,OAAIA,EAAEd,eAK7D,KAAuD,IAAvD,qCACA,kCAAI,uBAAOU,KAAK,WAAWE,QALP,WAAOL,EAAYV,MAKvC,KAAwD,IAAxD,+BAMEkB,EAAc,SAAC,GAAe,IAAdT,EAAa,EAAbA,SACdU,EAAO,GACTC,EAAe,KAYnB,OAVAX,EAASY,SACP,SAACC,GACGA,EAAQrB,WAAamB,GACvBD,EAAKI,KAAK,cAAC,EAAD,CAAUtB,SAAUqB,EAAQrB,UAAeqB,EAAQrB,WAE/DkB,EAAKI,KAAK,cAAC,EAAD,CAAWD,QAASA,GAAcA,EAAQlB,OACpDgB,EAAeE,EAAQrB,YAKvB,wBAAOuB,OAAO,MAAd,UACE,gCACE,+BACE,sCACA,4CAGJ,gCAAQL,QAKRM,EAAW,SAAC,GAAD,IAAExB,EAAF,EAAEA,SAAF,OACf,6BACA,oBAAIyB,QAAQ,IAAZ,SAAiBzB,OAKb0B,EAAW,SAAC,GAAc,IAAbL,EAAY,EAAZA,QACXlB,EAAOkB,EAAQnB,QAAUmB,EAAQlB,KAAO,uBAAMwB,MAAO,CAAEC,MAAO,OAAtB,UAAgCP,EAAQlB,KAAxC,OAC9C,OACE,+BACE,6BAAKA,IACL,6BAAKkB,EAAQpB,YCvEJ4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpC,EAAD,MAEFqC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f6b95137.chunk.js","sourcesContent":["// https://ko.reactjs.org/docs/thinking-in-react.html\n\nimport React, { useState } from 'react';\n//\nconst PRODUCTS = [\n  { category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football' },\n  { category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball' },\n  { category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball' },\n  { category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch' },\n  { category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5' },\n  { category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7' }\n];\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <FilterableProductTable />\n    </div>\n  );\n}\n\nfunction FilterableProductTable(){\n  const [products,setproducts] = useState(PRODUCTS);\n  return(\n    <div>\n      <Searchbar products={products} setproducts = {setproducts}/>\n      <Productsbar products={products}/>\n    </div>\n  )\n}\n\nconst Searchbar = ({ products , setproducts}) => {\n  const clickhandler = () => {setproducts(products.filter(a => a.stocked))};\n  const clickhandler2 = () => {setproducts(PRODUCTS)};\n  return(\n    <form id=\"form\">\n    <input type=\"text\" placeholder=\"Search...\" />\n    <p> <input type=\"checkbox\" onClick={clickhandler} />  {' '}  Only show products in stock  </p>\n    <p> <input type=\"checkbox\" onClick={clickhandler2} />  {' '}  Show All products  </p>\n  </form>\n  );\n}\n\n\nconst Productsbar = ({products}) =>{\n  const rows = [];\n  let lastCategory = null;\n\n  products.forEach(\n    (product) => {\n    if (product.category !== lastCategory) //카테고리별로 정리하기 위해서 넣음\n      rows.push(<Pushitem category={product.category} key={product.category} />);\n\n    rows.push(<Pushitems product={product} key={product.name} />);\n    lastCategory = product.category;\n  }\n  );\n\n  return (\n    <table border=\"1px\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Price</th>\n        </tr>\n      </thead>\n      <tbody>{rows}</tbody>\n    </table>\n  );\n}\n\nconst Pushitem = ({category}) => \n  <tr>\n  <th colSpan=\"2\">{category}\n  </th>\n</tr>;\n//sda\n\nconst Pushitems =({product}) =>{\n  const name = product.stocked ? product.name : <span style={{ color: 'red' }}>{product.name} </span>;\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{product.price}</td>\n    </tr>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
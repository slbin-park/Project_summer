{"version":3,"sources":["page/Sign.js","page/Main.js","page/Menupage.js","page/Staff.js","App.js","reportWebVitals.js","index.js"],"names":["Sign","props","location","history","useState","id","pwd","login","setLogin","check","setCheck","useEffect","Axios","get","then","response","data","console","log","className","htmlFor","type","onChange","e","target","value","placeholder","required","autoFocus","onClick","find","alert","push","pathname","Main","nickname","job","setJob","event","name","preventDefault","post","title","content","MenuPage","work","setWork","worktime","setWorktime","totalworktime","settotalWorktime","setValue","status","setStatus","Date","now","seconds","setSeconds","callback","delay","savedCallback","useRef","current","tick","setInterval","clearInterval","UseInterval","a","getworktime","date","gettime","starttime2","sumprice","getwork","time","start","UpdateWork","state","checktime","endtime2","time1","moment","time2","format","duration","diff","asMinutes","staff","data-bs-dismiss","href","interval","parseInt","Number","App","path","component","SignPage","MainPage","Menupage","Staff","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd584a9e.chunk.js","sourcesContent":["// eslint-disalbe\n\nimport React,{useState} from'react';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Axios from'axios';\nimport { useEffect } from 'react';\n\n\nfunction Sign({props, location, history }) { \n  //로그인을 위한 것들\n//   const mongoose = require('mongoose')\n//   mongoose.connect('mongodb+srv://slbin:awd15963@cluster0.mywlh.mongodb.net/myFirstDatabase?retryWrites=true&w=majority',{\n//   useNewUrlParser : true,useUnifiedTopology : true, useCreateIndex:true , useFindAndModify : false\n// }).then(() => console.log(\"연결 성공\"))\n//   .catch(err => console.log(\"연결실패\"));\n  const [login,setLogin] = useState({id: \"\",pwd: \"\"});\n  const [check,setCheck] = useState([]); //전체 데이터베이스 불러온것\n\n\n\n\n  useEffect(()=>{\n    Axios.get('https://qkrtmfqls.gabia.io/api/get').then((response)=>{\n        setCheck(response.data);\n        console.log(response.data);\n    })\n  },[])\n\n  const logincheck = () => {\n    const newcheck = [...check];\n    const id = newcheck.find(id => id.id == login.id);\n    console.log(id);\n    if(id==null){\n        alert('로그인실패');\n        console.log(check);\n    }\n    else if(id.id == login.id && id.pwd == login.pwd){\n        alert('로그인 성공');//성공시에만 띄움\n        history.push({\n            pathname: \"/Menupage\",\n            id : {id :  id} \n          })\n    }\n    else{\n      console.log(check[0]);\n      console.log(check[1]);\n      //alert(check[0]);\n\n    }\n  }\n\n  return(\n    <div className=\"container\">\n    <form  className=\"form-signin\">\n      <h2 className=\"form-signin-heading\">로그인 창</h2>\n      <label htmlFor=\"inputEmail\" className=\"sr-only\">고 번</label>\n      <input type=\"text\" onChange ={e => setLogin({...login, id : e.target.value})} value ={login.id} id=\"inputEmail\" className=\"form-control\" placeholder=\"ID\" required autoFocus/>\n      <label htmlFor=\"inputPassword\" className=\"sr-only\">비밀번호</label>\n      <input type=\"password\" onChange ={e => setLogin({...login, pwd : e.target.value})} value ={login.pwd} id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" required/>\n      <br></br>\n      <button onClick={logincheck} className=\"btn btn-lg btn-primary btn-block\" type=\"submit\"> 로그인 </button>\n      &nbsp;\n      <button onClick={() => history.push('/main')} className=\"btn btn-lg btn-primary btn-block\" > 회원가입 </button>\n      &nbsp;\n      </form>\n\n  </div>\n  );\n  \n}\n\nexport default Sign;","// eslint-disalbe\n\nimport React,{useState} from'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Axios from'axios';\nimport { useEffect } from 'react';\n\nfunction Main({history}) {\n  const [login,setLogin] = useState({id: \"\",pwd: \"\",nickname:\"\"});\n  const [job,setJob] = useState({value : \"스태프\"});\n\n  const [check,setCheck] = useState({\n    id : '',\n    pwd : '',\n    job : ''\n  });\n\n  useEffect(()=>{\n    Axios.get('https://qkrtmfqls.gabia.io/api/get').then((response)=>{\n        setCheck(response.data);\n    })\n  },[])\n  //데이터 불러오기\n  \n  const loginHandler = e =>{\n    if(login.id =='' || login.pwd =='' || login.nickname==''){\n      alert('공백이 있습니다.');\n    } else{\n      e.preventDefault();\n      console.log(check);\n      const newcheck = [...check];\n      const id = newcheck.find(id => id.id == login.id);\n      if(id!=null){\n          alert('중복된 아이디 입니다...');\n      }\n      else{\n      Axios.post('https://qkrtmfqls.gabia.io/api/insert', {\n        title: login.id,\n        content: login.pwd,\n        job : job.value,\n        nickname : login.nickname\n      }).then(()=>{\n        alert('회원가입 성공!!');\n        history.push('/sign');\n      })\n    }\n\n    }\n  }\n\n  //회원가입 성공\n  \n\n  const logincheck = () => {\n    const newcheck = [...check];\n    const id = newcheck.find(id => id.id = login.id);\n    if(id.id == login.id){\n        alert('중복된 아이디 입니다.');\n    }\n    else{\n        alert('로그인 실패..');\n    }\n  }\n\n\n  const handleChange = (event) =>{\n    setJob({value: event.target.value});\n    console.log(job);\n  }\n\n  return(\n    <div className=\"container\">\n    <form  className=\"form-signin\">\n      <h2 className=\"form-signin-heading\">회원가입 창</h2>\n\n      <label htmlFor=\"inputEmail\" className=\"sr-only\">고 번</label>\n      <input type=\"text\" onChange ={e => setLogin({...login, id : e.target.value})} value ={login.id} id=\"inputEmail\" className=\"form-control\" placeholder=\"ID\" required autoFocus/>\n      \n      <label htmlFor=\"inputPassword\" className=\"sr-only\">비밀번호</label>\n      <input type=\"password\" onChange ={e => setLogin({...login, pwd : e.target.value})} value ={login.pwd} id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" required/>\n      \n      <label htmlFor=\"inputPassword\" className=\"sr-only\">닉네임</label>\n      <input type=\"text\" onChange ={e => setLogin({...login, nickname : e.target.value})} value ={login.nickname}  className=\"form-control\" placeholder=\"Nickname\" required/>\n      \n    <div className=\"form-group\">\n        <label htmlFor=\"exampleSelect1\" className=\"form-label mt-4\">직업 선택</label>\n        <select value={job.value} onChange={handleChange} name =\"lifeArr\" className=\"form-select\" id=\"exampleSelect1\">\n          <option value=\"스태프\">스태프</option>\n          <option value=\"경찰\">경찰</option>\n          <option value=\"EMS\">EMS</option>\n          <option value=\"시민\">시민</option>\n      </select>\n    </div>\n\n      &nbsp;<br/>\n      <button onClick={loginHandler} className=\"btn btn-primary\" >   회원가입   </button>\n\n\n      </form>\n\n  </div>\n  );\n  \n}\n\nexport default Main;","// eslint-disalbe\n\nimport React,{useState,useRef} from'react';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Axios from'axios';\nimport { useEffect } from 'react';\nimport 'moment/locale/ko';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nfunction MenuPage({location,history }) { \n    const id = location;\n    //console.log(id.id.id);\n    const [login,setLogin] = useState({id: \"\",pwd: \"\"});\n    const [check,setCheck] = useState([]); //전체 데이터베이스 불러온것\n    const [work,setWork] = useState([]);\n    const [worktime,setWorktime] = useState([]);\n    const [totalworktime,settotalWorktime] = useState();\n    const [value,setValue] = useState(0);\n    //시간불러옴\n\n    const [status,setStatus] = useState(\"퇴근\");\n    const [seconds, setSeconds] = useState(Date.now()); //시간 확인할려고 만들었음\n\n    // useInterval\n    UseInterval(() => {\n      setSeconds(Date.now());\n    }, 1000);\n    const nowTime = Date.now();\n    // interval 30초\n    //return <Moment interval = { 30000 }>{nowTime}</Moment>;\n    // interval disable\n\n    //데이터 가져오기\n  useEffect(()=>{\n    Axios.get('https://qkrtmfqls.gabia.io/api/get').then((response)=>{\n        setCheck(response.data);\n        //gettime();//시간 불러오기\n        //getworktime();\n    });\n  },[seconds],[totalworktime])\n\n  useEffect(async()=>{\n        getworktime();\n        \n        await Axios.post('https://qkrtmfqls.gabia.io/api/gettime', {\n            title: id.id.id.id,\n            date: seconds\n        }).then((response)=>{\n            if(response.data ==id.id.id.id) //퇴근 안했음\n            {\n              console.log(\"돌아온값 : \",response.data);\n                setStatus(\"출근\");\n            }\n            else{\n                setStatus(\"퇴근\");\n            }\n        });\n  },[]);\n\n\n\n\n\n  //출근버튼 누르면 실행하는 함수\n\n  const starttime = () => {\n    gettime();//출근버튼 \n  }\n\n  const gettime = async function(){\n    await Axios.post('https://qkrtmfqls.gabia.io/api/gettime', {\n        title: id.id.id.id,\n        date: seconds\n    }).then((response)=>{\n        if(response.data ==id.id.id.id) //퇴근 안했음\n        {\n            alert(\"이미 출근하셨습니다.\");\n            setStatus(\"출근\");\n        }\n        else{\n            starttime2(); //출근 안했으니 insert구문으로 db에 데이터 넣어줌\n            setStatus(\"출근\");\n        }\n    });\n  }\n\n  useEffect(()=>{\n    console.log(\"status 값\",status);\n  },[status])\n\n\n  const starttime2 =async function(){\n    try{\n    await Axios.post('https://qkrtmfqls.gabia.io/api/insert2', {\n      title: id.id.id.id,\n      date: seconds,\n      nickname : id.id.id.nickname\n    }).then((response)=>{\n      console.log(\"받은값\",response);\n      alert('출근 성공');\n    })\n}catch(e){\n    console.log(\"출근에러 : \",e);\n}\n  }\n\n//출근 완료\n\n\n//   const getwork = async function(){\n//     await Axios.post('http://localhost:8000/api/getwork', {\n//         title: id.id.id.id,\n//         date: seconds,\n//       }).then((response)=>{\n//         console.log(response.data);\n//         setWork(response.data);\n//       })\n//   }\n  \n\n\n\n\n\n\n\n//총합시간계산\n  const getworktime = async function(){\n    await Axios.post('https://qkrtmfqls.gabia.io/api/getworktime', {\n        title: id.id.id.id,\n      }).then((response)=>{\n          settotalWorktime(response.data[0].sumprice);\n          console.log(response.data[0].sumprice);\n      })\n}\n\n\n//퇴근\n  const endtime = () => {\n    try{\n        getwork();\n    }catch(e){\n        console.log(e);\n    }\n\n\n};\n\n//work에 시작시간 테이블 가져오기\nconst getwork = async function(){\n    const response = await Axios.post('https://qkrtmfqls.gabia.io/api/getwork', {\n        title: id.id.id.id\n      });\n      if(response.data ==id.id.id.id) //퇴근 안했음\n      {\n          alert(\"출근하지 않으셨습니다.\");\n      }\n      else{\n        var time = response.data[0].start;\n        setValue(1);\n        UpdateWork(time);\n        //checktime();\n      }\n\n  }\n  const UpdateWork= (time)=>{\n    setWork((state,props)=>{\n        return {work : time}\n    });\n  }\n  //work값이 변경됬을때 실행\n  useEffect(()=>{\n    console.log(\"바뀐뒤 work값 : \",work);\n    checktime();//work값이 변경되었을때 실행함\n  },[work])\n\n  //worktime 값이 변했을때\n  useEffect(()=>{\n      if(value==1){\n    endtime2();\n      }\n  },[worktime])\n\n  //시간계산\n  const checktime = () =>{\n    try{\n  var time1 = moment(work.work,'MMMM Do YYYY, h:mm:ss a');\n  var time2 = moment(seconds); \n  console.log(time1.format('MMMM Do YYYY, h:mm:ss a'));\n  console.log(time2.format('MMMM Do YYYY, h:mm:ss a'));\n  var duration = moment.duration(time2.diff(time1)).asMinutes();\n  console.log(duration);\n  setWorktime(duration);\n  //var time3 = moment.duration(time1.diff(time2)).asMinutes();\n  console.log(time2);\n    //seconds -> 현재시간\n    }catch(e){\n        console.log(e);\n    }\n\n}\n\n    const endtime2 = async function(){\n        await Axios.post('https://qkrtmfqls.gabia.io/api/update', {\n            title: id.id.id.id,\n            date: moment(seconds).format('MMMM Do YYYY, h:mm:ss a'),\n            worktime : worktime\n          }).then(()=>{\n            console.log(\"일한시간\",worktime);\n            setValue(0);\n            getworktime();\n            alert('퇴근했습니다.');\n            setStatus(\"퇴근\");\n          })\n    }\n\n\n    const staff = async function(){\n\n      if(id.id.id.job == '스태프'){\n        alert('스태프 페이지 이동');//성공시에만 띄움\n      history.push({\n          pathname: \"/staff\",\n          id : {id :  id.id.id} \n        })\n      }\n      else {\n        alert('스태프만 가능합니다.');\n      }\n  }\n\n\n\n\n\n\n  return(\n <div className=\"d-grid gap-2\">\n     <h1>{id.id.id.nickname} 님 환영합니다.</h1>\n     <h2>고유번호 : {id.id.id.id}</h2>\n     <h2>직업 : {id.id.id.job}</h2>\n     <div className=\"alert alert-dismissible alert-warning\">\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n  <h4 className=\"alert-heading\">알림</h4>\n  <p className=\"mb-0\">{id.id.id.nickname} 님은 현재 <a href=\"#\" className=\"alert-link\">{status}</a> 상태입니다.</p>\n</div>\n\n  <button onClick={staff} className=\"btn btn-lg btn-primary\" type=\"button\" value=\"스태프\">스태프</button>\n  <button className=\"btn btn-lg btn-primary\" type=\"button\" value=\"경찰\">경찰</button>\n  <button className=\"btn btn-lg btn-primary\" type=\"button\" value=\"EMS\">EMS</button>\n    <Moment format=\"YYYY년 MM월 DD일 HH시 mm분 ss초\" interval = { 0 }>\n        {seconds}\n    </Moment>\n    <button onClick={starttime} className=\"btn btn-lg btn-primary\" type=\"button\">출근</button>\n    <button onClick={endtime} className=\"btn btn-lg btn-primary\" type=\"button\">퇴근</button>\n    <button onClick={getwork} className=\"btn btn-lg btn-primary\" type=\"button\">값 불러오기</button>\n    <button onClick={checktime} className=\"btn btn-lg btn-primary\" type=\"button\">시간계산</button>\n    <button onClick={getworktime} className=\"btn btn-lg btn-primary\" type=\"button\">총합시간계산</button>\n    <h1>총 일한시간 : {parseInt(Number(totalworktime)/60) } 시간 {parseInt(Number(totalworktime))%60 } 분</h1>\n    \n    </div>\n  );\n  \n}\n\n\nfunction UseInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    useEffect(() => {\n      // useEffect에 매개변수로 받은 콜백을 현재 Ref로 선언해준다.\n      savedCallback.current = callback;\n    });\n\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n        // useEffect에 Ref의 current를 setInterval를 delay 시간동안 해준다.\n      let id = setInterval(tick, delay);\n      // 언마운트되기전 clearInterval을 해준다.\n      return () => clearInterval(id);\n    }, [delay]);\n  }\n\nexport default MenuPage;","// eslint-disalbe\n\nimport React,{useState,useRef} from'react';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Axios from'axios';\nimport { useEffect } from 'react';\nimport 'moment/locale/ko';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nfunction MenuPage({location,history }) { \n    const id = location;\n    console.log(\"location 값\",location);\n    const [login,setLogin] = useState({id: \"\",pwd: \"\"});\n    const [check,setCheck] = useState([]); //전체 데이터베이스 불러온것\n    const [work,setWork] = useState([]);\n    const [worktime,setWorktime] = useState([]);\n    const [totalworktime,settotalWorktime] = useState();\n    const [value,setValue] = useState(0);\n    //시간불러옴\n\n    const [status,setStatus] = useState(\"퇴근\");\n    const [seconds, setSeconds] = useState(Date.now()); //시간 확인할려고 만들었음\n\n    // useInterval\n    UseInterval(() => {\n      setSeconds(Date.now());\n    }, 1000);\n    const nowTime = Date.now();\n    // interval 30초\n    //return <Moment interval = { 30000 }>{nowTime}</Moment>;\n    // interval disable\n\n    //데이터 가져오기\n  useEffect(()=>{\n    Axios.get('https://qkrtmfqls.gabia.io/api/get').then((response)=>{\n        setCheck(response.data);\n        //gettime();//시간 불러오기\n        //getworktime();\n    });\n  },[seconds],[totalworktime])\n\n  useEffect(async()=>{\n        getworktime();\n        \n        await Axios.post('https://qkrtmfqls.gabia.io/api/gettime', {\n            title: id.id.id.id,\n            date: seconds\n        }).then((response)=>{\n            if(response.data ==id.id.id.id) //퇴근 안했음\n            {\n              console.log(\"돌아온값 : \",response.data);\n                setStatus(\"출근\");\n            }\n            else{\n                setStatus(\"퇴근\");\n            }\n        });\n  },[]);\n\n\n\n\n\n  //출근버튼 누르면 실행하는 함수\n\n  const starttime = () => {\n    gettime();//출근버튼 \n  }\n\n  const gettime = async function(){\n    await Axios.post('https://qkrtmfqls.gabia.io/api/gettime', {\n        title: id.id.id.id,\n        date: seconds\n    }).then((response)=>{\n        if(response.data ==id.id.id.id) //퇴근 안했음\n        {\n            alert(\"이미 출근하셨습니다.\");\n            setStatus(\"출근\");\n        }\n        else{\n            starttime2(); //출근 안했으니 insert구문으로 db에 데이터 넣어줌\n            setStatus(\"출근\");\n        }\n    });\n  }\n\n  useEffect(()=>{\n    console.log(\"status 값\",status);\n  },[status])\n\n\n  const starttime2 =async function(){\n    try{\n    await Axios.post('https://qkrtmfqls.gabia.io/api/insert2', {\n      title: id.id.id.id,\n      date: seconds,\n      nickname : id.id.id.nickname\n    }).then((response)=>{\n      console.log(\"받은값\",response);\n      alert('출근 성공');\n    })\n}catch(e){\n    console.log(\"출근에러 : \",e);\n}\n  }\n\n//출근 완료\n\n\n//   const getwork = async function(){\n//     await Axios.post('http://localhost:8000/api/getwork', {\n//         title: id.id.id.id,\n//         date: seconds,\n//       }).then((response)=>{\n//         console.log(response.data);\n//         setWork(response.data);\n//       })\n//   }\n  \n\n\n\n\n\n\n\n//총합시간계산\n  const getworktime = async function(){\n    await Axios.post('https://qkrtmfqls.gabia.io/api/getworktime', {\n        title: id.id.id.id,\n      }).then((response)=>{\n          settotalWorktime(response.data[0].sumprice);\n          console.log(response.data[0].sumprice);\n      })\n}\n\n\n//퇴근\n  const endtime = () => {\n    try{\n        getwork();\n    }catch(e){\n        console.log(e);\n    }\n\n\n};\n\n//work에 시작시간 테이블 가져오기\nconst getwork = async function(){\n    const response = await Axios.post('https://qkrtmfqls.gabia.io/api/getwork', {\n        title: id.id.id.id\n      });\n      if(response.data ==id.id.id.id) //퇴근 안했음\n      {\n          alert(\"출근하지 않으셨습니다.\");\n      }\n      else{\n        var time = response.data[0].start;\n        setValue(1);\n        UpdateWork(time);\n        //checktime();\n      }\n\n  }\n  const UpdateWork= (time)=>{\n    setWork((state,props)=>{\n        return {work : time}\n    });\n  }\n  //work값이 변경됬을때 실행\n  useEffect(()=>{\n    console.log(\"바뀐뒤 work값 : \",work);\n    checktime();//work값이 변경되었을때 실행함\n  },[work])\n\n  //worktime 값이 변했을때\n  useEffect(()=>{\n      if(value==1){\n    endtime2();\n      }\n  },[worktime])\n\n  //시간계산\n  const checktime = () =>{\n    try{\n  var time1 = moment(work.work,'MMMM Do YYYY, h:mm:ss a');\n  var time2 = moment(seconds); \n  console.log(time1.format('MMMM Do YYYY, h:mm:ss a'));\n  console.log(time2.format('MMMM Do YYYY, h:mm:ss a'));\n  var duration = moment.duration(time2.diff(time1)).asMinutes();\n  console.log(duration);\n  setWorktime(duration);\n  //var time3 = moment.duration(time1.diff(time2)).asMinutes();\n  console.log(time2);\n    //seconds -> 현재시간\n    }catch(e){\n        console.log(e);\n    }\n\n}\n\n    const endtime2 = async function(){\n        await Axios.post('http://qkrtmfqls.gabia.io/api/update', {\n            title: id.id.id.id,\n            date: moment(seconds).format('MMMM Do YYYY, h:mm:ss a'),\n            worktime : worktime\n          }).then(()=>{\n            console.log(\"일한시간\",worktime);\n            setValue(0);\n            getworktime();\n            alert('퇴근했습니다.');\n            setStatus(\"퇴근\");\n          })\n    }\n\n\n\n\n\n\n\n  return(\n <div className=\"d-grid gap-2\">\n    <h1>스태프 페이지 입니다.</h1>\n    <h1>{id.id.id.id} 님 환영합니다.</h1>\n    <h2>아이디 : {id.id.id.id}</h2>\n    <h2>직업 : {id.id.id.job}</h2>\n    <div className=\"alert alert-dismissible alert-warning\">\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n  <h4 className=\"alert-heading\">알림</h4>\n  <p className=\"mb-0\">{id.id.id.nickname} 님은 현재 <a href=\"#\" className=\"alert-link\">{status}</a> 상태입니다.</p>\n</div>\n    <Moment format=\"YYYY년 MM월 DD일 HH시 mm분 ss초\" interval = { 0 }>\n        {seconds}\n    </Moment>\n    <button onClick={starttime} className=\"btn btn-lg btn-primary\" type=\"button\">출근</button>\n    <button onClick={endtime} className=\"btn btn-lg btn-primary\" type=\"button\">퇴근</button>\n    <h1>총 일한시간 : {parseInt(Number(totalworktime)/60) } 시간 {parseInt(Number(totalworktime))%60 } 분</h1>\n    \n    </div>\n  );\n  \n}\n\n\nfunction UseInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    useEffect(() => {\n      // useEffect에 매개변수로 받은 콜백을 현재 Ref로 선언해준다.\n      savedCallback.current = callback;\n    });\n\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n        // useEffect에 Ref의 current를 setInterval를 delay 시간동안 해준다.\n      let id = setInterval(tick, delay);\n      // 언마운트되기전 clearInterval을 해준다.\n      return () => clearInterval(id);\n    }, [delay]);\n  }\n\nexport default MenuPage;","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport SignPage from './page/Sign'; \nimport MainPage from './page/Main';\nimport Menupage from './page/Menupage';\nimport Staff from './page/Staff';\nimport {Link } from 'react-router-dom';\n\n\nfunction App({props, location, history }) { \n\n  return ( \n    <> \n      <Router> \n        <Switch> \n        <> \n        <Route path='/' component={SignPage} /> \n          <Route path='/sign' component={SignPage} /> \n          <Route path='/main' component={MainPage} /> \n          <Route path='/menupage' component={Menupage} /> \n          <Route path='/staff' component={Staff} /> \n          </> \n        </Switch> \n      </Router> \n    </> \n          ); }\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
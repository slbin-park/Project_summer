{"version":3,"sources":["page/Main.js","page/Sign.js","page/Menupage.js","App.js","reportWebVitals.js","index.js"],"names":["Main","history","useState","id","pwd","nickname","login","setLogin","value","job","setJob","check","setCheck","useEffect","Axios","get","then","response","data","className","htmlFor","type","onChange","e","target","placeholder","required","autoFocus","event","console","log","name","onClick","alert","length","preventDefault","find","post","title","content","push","Sign","props","location","pathname","MenuPage","work","setWork","Date","now","seconds","setSeconds","setvalue","callback","delay","savedCallback","useRef","current","tick","setInterval","clearInterval","UseInterval","gettime","a","date","starttime2","endtime2","moment","format","interval","App","path","component","SignPage","MainPage","Menupage","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cf95ae7.chunk.js","sourcesContent":["// eslint-disalbe\n\nimport React,{useState} from'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Axios from'axios';\nimport { useEffect } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\n\nfunction Main({history}) {\n  const [login,setLogin] = useState({id: \"\",pwd: \"\",nickname:\"\"});\n  const [job,setJob] = useState({value : \"스태프\"});\n\n  const [check,setCheck] = useState({\n    id : '',\n    pwd : '',\n    job : ''\n  });\n\n  useEffect(()=>{\n    Axios.get('http://localhost:8000/api/get').then((response)=>{\n        setCheck(response.data);\n    })\n  },[])\n  //데이터 불러오기\n  \n  const loginHandler = e =>{\n    if(login.id =='' || login.pwd =='' || login.nickname==''){\n      alert('공백이 있습니다.');\n    }\n    else if(login.id.length <5)\n    {\n      alert('아이디 4자이상하셈');\n    }\n    else if(login.pwd.length <7){\n      alert('비밀번호 6자이상 하셈');\n    }\n    else if(login.nickname.length <3){\n      alert('닉네임 3글자이상 하셈');\n    } else{\n      e.preventDefault();\n      console.log(check);\n      const newcheck = [...check];\n      const id = newcheck.find(id => id.id == login.id);\n      if(id!=null){\n          alert('중복된 아이디 입니다...');\n      }\n      else{\n      Axios.post('http://localhost:8000/api/insert', {\n        title: login.id,\n        content: login.pwd,\n        job : job.value,\n        nickname : login.nickname\n      }).then(()=>{\n        alert('회원가입 성공!!');\n        history.push('/sign');\n      })\n    }\n\n    }\n  }\n\n  //회원가입 성공\n  \n\n  const logincheck = () => {\n    const newcheck = [...check];\n    const id = newcheck.find(id => id.id = login.id);\n    if(id.id == login.id){\n        alert('중복된 아이디 입니다.');\n    }\n    else{\n        alert('로그인 실패..');\n    }\n  }\n\n\n  const handleChange = (event) =>{\n    setJob({value: event.target.value});\n    console.log(job);\n  }\n\n  return(\n    <div className=\"container\">\n    <form  className=\"form-signin\">\n      <h2 className=\"form-signin-heading\">회원가입 창</h2>\n\n      <label htmlFor=\"inputEmail\" className=\"sr-only\">고 번</label>\n      <input type=\"text\" onChange ={e => setLogin({...login, id : e.target.value})} value ={login.id} id=\"inputEmail\" className=\"form-control\" placeholder=\"ID\" required autoFocus/>\n      \n      <label htmlFor=\"inputPassword\" className=\"sr-only\">비밀번호</label>\n      <input type=\"password\" onChange ={e => setLogin({...login, pwd : e.target.value})} value ={login.pwd} id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" required/>\n      \n      <label htmlFor=\"inputPassword\" className=\"sr-only\">닉네임</label>\n      <input type=\"text\" onChange ={e => setLogin({...login, nickname : e.target.value})} value ={login.nickname}  className=\"form-control\" placeholder=\"Nickname\" required/>\n      \n    <div className=\"form-group\">\n        <label htmlFor=\"exampleSelect1\" className=\"form-label mt-4\">직업 선택</label>\n        <select value={job.value} onChange={handleChange} name =\"lifeArr\" className=\"form-select\" id=\"exampleSelect1\">\n          <option value=\"스태프\">스태프</option>\n          <option value=\"경찰\">경찰</option>\n          <option value=\"EMS\">EMS</option>\n      </select>\n    </div>\n\n      &nbsp;<br/>\n      <button onClick={loginHandler} className=\"btn btn-primary\" >   회원가입   </button>\n\n\n      </form>\n\n  </div>\n  );\n  \n}\n\nexport default Main;","// eslint-disalbe\n\nimport React,{useState} from'react';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Axios from'axios';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport MainPage from './Main';\n\nfunction Sign({props, location, history }) { \n  //로그인을 위한 것들\n//   const mongoose = require('mongoose')\n//   mongoose.connect('mongodb+srv://slbin:awd15963@cluster0.mywlh.mongodb.net/myFirstDatabase?retryWrites=true&w=majority',{\n//   useNewUrlParser : true,useUnifiedTopology : true, useCreateIndex:true , useFindAndModify : false\n// }).then(() => console.log(\"연결 성공\"))\n//   .catch(err => console.log(\"연결실패\"));\n  const [login,setLogin] = useState({id: \"\",pwd: \"\"});\n  const [check,setCheck] = useState([]); //전체 데이터베이스 불러온것\n\n\n\n\n  useEffect(()=>{\n    Axios.get('http://localhost:8000/api/get').then((response)=>{\n        setCheck(response.data);\n    })\n  },[])\n\n  const logincheck = () => {\n    const newcheck = [...check];\n    const id = newcheck.find(id => id.id = login.id);\n    if(id==null){\n        alert('로그인실패');\n    }\n    else if(id.id == login.id && id.pwd == login.pwd){\n        alert('로그인 성공');\n        history.push({\n            pathname: \"/Menupage\",\n            id : {id :  id} \n          })\n    }\n    else{\n        alert('로그인 실패..');\n    }\n  }\n\n  return(\n    <div className=\"container\">\n    <form  className=\"form-signin\">\n      <h2 className=\"form-signin-heading\">로그인 창</h2>\n      <label htmlFor=\"inputEmail\" className=\"sr-only\">고 번</label>\n      <input type=\"text\" onChange ={e => setLogin({...login, id : e.target.value})} value ={login.id} id=\"inputEmail\" className=\"form-control\" placeholder=\"ID\" required autoFocus/>\n      <label htmlFor=\"inputPassword\" className=\"sr-only\">비밀번호</label>\n      <input type=\"password\" onChange ={e => setLogin({...login, pwd : e.target.value})} value ={login.pwd} id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" required/>\n      <br></br>\n      <button onClick={logincheck} className=\"btn btn-lg btn-primary btn-block\" type=\"submit\"> 로그인 </button>\n      &nbsp;\n      <button onClick={() => history.push('/main')} className=\"btn btn-lg btn-primary btn-block\" > 회원가입 </button>\n      &nbsp;\n      </form>\n\n  </div>\n  );\n  \n}\n\nexport default Sign;","// eslint-disalbe\n\nimport React,{useState,useRef} from'react';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Axios from'axios';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport MainPage from './Main';\nimport {useLocation} from \"react-router\";\nimport 'moment/locale/ko';\nimport { useInterval } from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nfunction MenuPage({location,history }) { \n    const id = location;\n    //console.log(id.id.id);\n    const [login,setLogin] = useState({id: \"\",pwd: \"\"});\n    const [check,setCheck] = useState([]); //전체 데이터베이스 불러온것\n    const [work,setWork] = useState([]);\n    //시간불러옴\n\n    const [seconds, setSeconds] = useState(Date.now());\n    const [value,setvalue] = useState(1);\n\n    // useInterval\n    UseInterval(() => {\n      setSeconds(Date.now());\n    }, 1000);\n    const nowTime = Date.now();\n    // interval 30초\n    //return <Moment interval = { 30000 }>{nowTime}</Moment>;\n    // interval disable\n\n    //데이터 가져오기\n  useEffect(()=>{\n    Axios.get('http://localhost:8000/api/get').then((response)=>{\n        setCheck(response.data);\n    });\n    gettime();\n  },[value],[work])\n\n    const gettime = async function(){\n    await Axios.post('http://localhost:8000/api/gettime', {\n        title: id.id.id.id,\n        date: seconds\n    }).then((response)=>{\n        if(response.data ==id.id.id.id)\n        {\n            console.log(response.data);\n            setvalue(0);\n           // alert(\"출근중입니다\");\n        }\n        else{\n        console.log(response.data);\n        setWork(response.data);\n        setvalue(1);\n        }\n    });\n  }\n\n  const starttime = () => {\n    gettime();\n    starttime2();\n  }\n  \n  const starttime2 =async function(){\n    if(value == 1)\n    {\n    console.log(work.length);\n    await Axios.post('http://localhost:8000/api/insert2', {\n      title: id.id.id.id,\n      date: seconds,\n      nickname : id.id.id.nickname\n    }).then(()=>{\n      alert('인서트 성공');\n    })\n  }\n  else{\n      alert(\"이미 출근중입니다.\");\n  }\n  }\n\n//퇴근\n  const endtime = () => {\n    endtime2();\n};\n     const endtime2 = async function(){\n        await Axios.post('http://localhost:8000/api/update', {\n            title: id.id.id.id,\n            date: moment(seconds).format('MMMM Do YYYY, h:mm:ss a')\n          }).then(()=>{\n            alert('퇴근했습니다.');\n            setvalue(1);\n          })\n    }\n\n\n\n\n  return(\n <div className=\"d-grid gap-2\">\n     <h1>{id.id.id.id} 님 환영합니다.</h1>\n     <h2>아이디 : {id.id.id.id}</h2>\n     <h2>직업 : {id.id.id.job}</h2>\n  <button className=\"btn btn-lg btn-primary\" type=\"button\" value=\"스태프\">스태프</button>\n  <button className=\"btn btn-lg btn-primary\" type=\"button\" value=\"경찰\">경찰</button>\n  <button className=\"btn btn-lg btn-primary\" type=\"button\" value=\"EMS\">EMS</button>\n    <Moment format=\"YYYY년 MM월 DD일 HH시 mm분 ss초\" interval = { 0 }>\n        {seconds}\n    </Moment>\n    <button onClick={starttime} className=\"btn btn-lg btn-primary\" type=\"button\">출근</button>\n    <button onClick={endtime} className=\"btn btn-lg btn-primary\" type=\"button\">퇴근</button>\n    </div>\n  );\n  \n}\n\n\nfunction UseInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    useEffect(() => {\n      // useEffect에 매개변수로 받은 콜백을 현재 Ref로 선언해준다.\n      savedCallback.current = callback;\n    });\n\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n        // useEffect에 Ref의 current를 setInterval를 delay 시간동안 해준다.\n      let id = setInterval(tick, delay);\n      // 언마운트되기전 clearInterval을 해준다.\n      return () => clearInterval(id);\n    }, [delay]);\n  }\n\nexport default MenuPage;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SignPage from './page/Sign'; \nimport MainPage from './page/Main';\nimport Menupage from './page/Menupage';\nimport { Link } from 'react-router-dom';\n\n\nfunction App({props, location, history }) { \n\n  return ( \n    <> \n      <Router> \n        <Switch> \n        <> \n          <Route path='/sign' component={SignPage} /> \n          <Route path='/main' component={MainPage} /> \n          <Route path='/menupage' component={Menupage} /> \n          <Link to='/sign'>sign</Link>\n          </> \n        </Switch> \n      </Router> \n    </> \n          ); }\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}